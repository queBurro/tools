cls
$ScriptName = $MyInvocation.MyCommand.Name
echo "Running... $ScriptName" 


echo "add an alias to witadmin.exe utility"
Set-Alias -Name witadmin -Value 'C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\witadmin.exe'

echo "Specifying the path"
Set-Alias -Name tfsSec   -Value 'C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE\TFSSecurity.exe'



$CollectionURLArray = @(
"http://tfs:8080/tfs/ARS_Plus_Collection"
,"http://tfs:8080/tfs/Automation_Tools_Collection"
,"http://tfs:8080/tfs/CCF_Collection"
,"http://tfs:8080/tfs/CodeCoverage_Collection"
,"http://tfs:8080/tfs/Common_Components_Collection"
,"http://tfs:8080/tfs/ConfigurationManagement"
,"http://tfs:8080/tfs/Data_Services_Collection"
,"http://tfs:8080/tfs/DeltaRail_Common_Collection"
,"http://tfs:8080/tfs/DeltaRailSolutions_Collection"
,"http://tfs:8080/tfs/DummyIecc_Collection"
,"http://tfs:8080/tfs/EnergyMonitoring_Collection"
,"http://tfs:8080/tfs/Fishbone_Collection"
,"http://tfs:8080/tfs/IChex_Collection"
,"http://tfs:8080/tfs/IECC Classic Collection"
,"http://tfs:8080/tfs/IECCScalableCollection"
,"http://tfs:8080/tfs/IRMA_Collection"
,"http://tfs:8080/tfs/IT Collection"
,"http://tfs:8080/tfs/MechanicalInteractions_Collection"
,"http://tfs:8080/tfs/OLIVE_Collection"
,"http://tfs:8080/tfs/Panchex_Collection"
,"http://tfs:8080/tfs/Pegasus_Collection"
,"http://tfs:8080/tfs/RTS_Collection"
,"http://tfs:8080/tfs/TCA_Collection"
,"http://tfs:8080/tfs/TFSBuilds_Collection"
,"http://tfs:8080/tfs/TFSRollOut_Collection"
,"http://tfs:8080/tfs/Trackline2"
,"http://tfs:8080/tfs/TTP_Collection"
,"http://tfs:8080/tfs/VampireCollection"
,"http://tfs:8080/tfs/VIEW_Collection"
,"http://tfs:8080/tfs/VTE_Collection"
,"http://tfs:8080/tfs/WheelChex_Collection"
,"http://tfs:8080/tfs/WSPER_Collection"
,"http://tfs:8080/tfs/XDM_Collection"
,"http://tfs:8080/tfs/XVPlus_Collection"
)

$CollectionURLArray222 = @(
"http://tfs:8080/tfs/ARS_Plus_Collection"
,"http://tfs:8080/tfs/WSPER_Collection"
)

function CheckForField([string]$aField)
{
    Write-Output "Collection: $CollectionURL"
    write-Output "Field: $aField"
    #witadmin listwitd /collection:$CollectionURL /p:$a | select-string "Test Log"
    witadmin listfields /collection:$CollectionURL /n:$aField | select-string "Use:"
    write-Output "---"
}

$outfile="userInfo.txt"
Write-Output "User info " > $outfile

foreach ($coll in $CollectionURLArray)
{
    Write-Output "#####################################" >> $outfile
    Write-Output $coll >> $outfile
    Write-Output "####" >> $outfile

    tfsSec /imx “Project Collection Valid Users” /collection:"$coll" >> $outfile
    Write-Output " Done! " >> $outfile
}

#foreach ($id in 50..54) foreach ($id in "a","b","c")


